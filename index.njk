---
layout: layouts/base
currentTitle: Home
---
<nord-header slot="header">
  <nord-stack direction="horizontal" wrap>
    <nord-button-group>
      {% for shipType in ships.types.list %}
        <nord-button id="button-section-{{shipType.id}}" href="#{{shipType.id}}" size="s" variant="plain">{{shipType.label}}</nord-button>
      {% endfor %}

      <nord-button class="search-button" aria-describedby="tt-search" size="s" variant="plain">
        <i slot="start" class="fa-solid fa-magnifying-glass fa-lg"></i>
      </nord-button>
      <nord-tooltip id="tt-search">Search ships by name and/or tags</nord-tooltip>

      <nord-button id="filters-button" aria-describedby="tt-filter" size="s" variant="plain">
        <i slot="start" class="fa-solid fa-filter fa-lg"></i>
        <nord-badge id="filtered-badge" class="hide" variant="warning">Filtered</nord-badge>
      </nord-button>
      <nord-tooltip id="tt-filter">Filter ships by type and tags</nord-tooltip>

      <nord-button class="clear-button hide" aria-describedby="tt-clear" size="s" variant="plain">
        <i slot="start" class="fa-solid fa-xmark fa-lg"></i>
      </nord-button>
      <nord-tooltip id="tt-clear">Clear ship filters</nord-tooltip>
    </nord-button-group>
  </nord-stack>
</nord-header>
<nord-modal id="filters-modal" size="l" aria-labelledby="filters-modal-title">
  <h2 slot="header" id="filters-modal-title">Ship Filters</h2>
  <section class="n-grid-2">
    <nord-stack direction="horizontal">
      <nord-stack>
        <p class="n-color-text-weaker n-font-size-s">Sale Type</p>
        <nord-stack>
          <nord-checkbox class="ship-filter ship-filter-sale-type" label="Free" value="free"></nord-checkbox>
          <nord-checkbox class="ship-filter ship-filter-sale-type" label="For Sale" value="for-sale"></nord-checkbox>
        </nord-stack>
        <p class="n-color-text-weaker n-font-size-s">Status</p>
        <nord-stack>
          <nord-checkbox class="ship-filter ship-filter-status" label="New" value="new"></nord-checkbox>
          <nord-checkbox class="ship-filter ship-filter-status" label="Updated" value="updated"></nord-checkbox>
          <nord-checkbox class="ship-filter ship-filter-status" label="Popular" value="popular"></nord-checkbox>
        </nord-stack>
      </nord-stack>
      <nord-stack>
        <p class="n-color-text-weaker n-font-size-s">Ship Type</p>
        <nord-stack>
          {% for shipType in ships.types.list %}
            <nord-checkbox class="ship-filter ship-filter-type" label="{{shipType.label}}" value="{{shipType.id}}"></nord-checkbox>
          {% endfor %}
        </nord-stack>
      </nord-stack>
    </nord-stack>
    <nord-stack>
      <p class="n-color-text-weaker n-font-size-s">Ship Tag</p>
      <nord-stack direction="horizontal">
        {% for tags in ships.tags.list | slice(2) %}
          <nord-stack>
            {% for tag in tags %}
              <nord-checkbox class="ship-filter ship-filter-tag" label="{{tag.label}}" value="{{tag.id}}"></nord-checkbox>
            {% endfor %}
          </nord-stack>
        {% endfor %}
      </nord-stack>
    </nord-stack>
  </section>
  <nord-button slot="footer" expand id="filters-modal-clear">Clear</nord-button>
  <nord-button slot="footer" expand id="filters-modal-apply" variant="primary" autofocus>Apply</nord-button>
</nord-modal>
<script>
  const filtersModal = document.querySelector("#filters-modal");

  const filtersButton = document.querySelector("#filters-button");
  filtersButton.addEventListener("click", () => filtersModal.showModal());

  const filtersApply = document.querySelector("#filters-modal-apply");
  filtersApply.addEventListener("click", () => {
    applyFilters();
    filtersModal.close();
  });

  const filtersClear = document.querySelector("#filters-modal-clear");
  filtersClear.addEventListener("click", () => {
    clearFilters();
  });

  const clearFilters = () => {
    document.querySelectorAll('.ship-filter').forEach((item) => {
        item.checked = false;
    });
  };

  const applyFilters = () => {
    document.querySelectorAll('.ship-card').forEach((item) => {
      item.classList.add('hide');
    });

    const saleTypes = document.querySelectorAll('.ship-filter-sale-type').values().filter((item) => item.checked).map(({ value }) => value).toArray();
    const statuses = document.querySelectorAll('.ship-filter-status').values().filter((item) => item.checked).map(({ value }) => value).toArray();
    const types = document.querySelectorAll('.ship-filter-type').values().filter((item) => item.checked).map(({ value }) => value).toArray();
    const tags = document.querySelectorAll('.ship-filter-tag').values().filter((item) => item.checked).map(({ value }) => value).toArray();

    const shipsToShow = ships
      .filter((ship) => {
        return !saleTypes.length || saleTypes.includes(ship.saleType)
      }).filter((ship) => {
        return !statuses.length || !_.isEmpty(_(ship).pick(statuses).pickBy(_.identity).value())
      }).filter((ship) => {
        return !types.length || ship.types.some(({ type }) => types.includes(type))
      }).filter((ship) => {
        return !tags.length || ship.tags.some(({ id }) => tags.includes(id))
      });

    const qs = Qs.stringify({ saleTypes, statuses, types, tags });
    window.history.pushState({}, null, `?${qs}`)

    shipsToShow.forEach((ship) => {
      document.querySelectorAll(`.ship-${ship.slug}`).forEach((card) => card.classList.remove('hide'));
    });

    document.querySelectorAll('.ship-section').forEach((section) => {
      const shipCards = section.querySelectorAll('.ship-card');
      const hiddenShipCards = section.querySelectorAll('.ship-card.hide');
      if (shipCards.length === hiddenShipCards.length) {
        section.classList.add('hide');
        document.querySelector(`#button-${section.id}`).disabled = true;
        return;
      }
      section.classList.remove('hide');
      document.querySelector(`#button-${section.id}`).disabled = false;
    })

    document.querySelector('.reset-ship-filters').classList.add('hide');
    if (shipsToShow.length === 0) document.querySelector('.reset-ship-filters').classList.remove('hide');

    const filtered = document.querySelectorAll('#filtered-badge, .clear-button');
    filtered.forEach((item) => item.classList.add('hide'));
    if (shipsToShow.length !== ships.length) filtered.forEach((item) => item.classList.remove('hide'));
  };
</script>
<nord-stack gap="l" class="n-padding-i-l n-padding-b-l">
  <nord-stack gap="l" class="n-padding-i-l n-padding-b-l" style="min-width: 900px; width: 900px;">
    <nord-card padding="none">
      <nord-stack direction="horizontal" justify-content="center" align-items="stretch">
        <nord-stack direction="horizontal" justify-content="center" align-items="stretch">
          <img src="{{ 'images/logos/egotech_logo_dark_transparent.png' | url }}" alt="EGOTech Logo" />
        </nord-stack>
        <nord-divider direction="vertical"></nord-divider>
        <nord-stack direction="vertical" align-items="stretch" class="n-padding-i-l n-padding-b-l">
          <h1>EGOTech</h1>
          <p class="n-font-size-l">
            EGOTech thrives to design various types of Starbase ships that are practical but fun to use.
            Free blueprints are available for download with premium versions available for sale for in game credits.
          </p>
          <a href="https://discord.gg/BKwVGvncmN">
            <img alt="EGOTech Discord Server" src="https://camo.githubusercontent.com/a52557e3b6648630b7bf1f530c22745e510cbed885cff0c1e11fccb64e9c61da/68747470733a2f2f646973636f72646170702e636f6d2f6170692f6775696c64732f313031333332383638353536343137383437322f7769646765742e706e673f7374796c653d62616e6e657232" />
          </a>
          <nord-banner variant="info">
            <p class="n-font-size-m">
              <a href="https://www.starbasegame.com/">Starbase</a> is a MMO game developed by <a href="https://www.frozenbyte.com/">Frozenbyte</a>.
            </p>
        </nord-banner>
        </nord-stack>
      </nord-stack>
    </nord-card>
  </nord-stack>
  <nord-stack class="reset-ship-filters n-padding-i-l n-padding-b-l hide" style="max-width: 1200px;"">
    <nord-card>
      <nord-empty-state>
        <h2>No ships found</h2>
        <p>Try adjusting your filter options to find what youâ€™re looking for.</p>
        <nord-button variant="primary">Clear filters</nord-button>
      </nord-empty-state>
    </nord-card>
  </nord-stack>
  <script>
    document
      .querySelectorAll('.reset-ship-filters nord-button, .clear-button')
      .forEach((button) =>
        button.addEventListener('click', () => {
          clearFilters();
          applyFilters();
        })
      );
  </script>
  {% for shipType in ships.types.list %}
    <nord-stack id="section-{{shipType.id}}" class="ship-section">
      <nord-stack gap="l" class="n-padding-i-l n-padding-b-l">
        <h1 id="{{shipType.id}}">{{shipType.label}}</h1>
        <nord-stack direction="horizontal" wrap>
        {% for ship in ships.byType[shipType.id] %}
          {% include 'shipCard.njk' %}
        {% endfor %}
        </nord-stack>
      </nord-stack>
      <nord-divider></nord-divider>
    </nord-stack>
  {% endfor %}
</nord-stack>
<script>
  const qsObj = Qs.parse(window.location.search.replace(/^\?/, ''));

  if (qsObj.saleTypes)
    document.querySelectorAll('.ship-filter-sale-type').forEach((node) => {
      if (qsObj.saleTypes.includes(node.value)) node.checked = true;
    });

  if (qsObj.statuses)
    document.querySelectorAll('.ship-filter-status').forEach((node) => {
      if (qsObj.statuses.includes(node.value)) node.checked = true;
    });

  if (qsObj.types)
    document.querySelectorAll('.ship-filter-type').forEach((node) => {
      if (qsObj.types.includes(node.value)) node.checked = true;
    });

  if (qsObj.tags)
    document.querySelectorAll('.ship-filter-tag').forEach((node) => {
      if (qsObj.tags.includes(node.value)) node.checked = true;
    });

  applyFilters();
</script>
